
package Interfaces;

import Actions.InvoiceTableChooseListener;
import Actions.ProjectActions;
import DataEntry.InvoiceHeader;
import DataEntry.InvoiceHeaderTM;
import DataEntry.InvoiceLine;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTable;



public class InvoiceApp extends javax.swing.JFrame {

    /**
     * Creates new form InvoiceApp
     */
    public InvoiceApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableOfInvoices = new javax.swing.JTable();
        newinvoicebutton = new javax.swing.JButton();
        removeinvoicebutton = new javax.swing.JButton();
        InvoiceNum = new javax.swing.JLabel();
        InvoiceDate = new javax.swing.JLabel();
        ClientName = new javax.swing.JLabel();
        Total = new javax.swing.JLabel();
        InvoiceNumLabel = new javax.swing.JLabel();
        InvoiceDateLabel = new javax.swing.JLabel();
        ClientNameLabel = new javax.swing.JLabel();
        InvoiceTotalLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableOfInvoiceItems = new javax.swing.JTable();
        newlinebutton = new javax.swing.JButton();
        removelinebutton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        LoadFiles = new javax.swing.JMenuItem();
        SaveFiles = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TableOfInvoices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TableOfInvoices.getSelectionModel().addListSelectionListener(InvoiceChoseListener);
        jScrollPane1.setViewportView(TableOfInvoices);

        newinvoicebutton.setText("Create New Invoice");
        newinvoicebutton.addActionListener(ActionsListener);

        removeinvoicebutton.setText("Delete Invoice");
        removeinvoicebutton.addActionListener(ActionsListener);

        InvoiceNum.setText("Number");

        InvoiceDate.setText("Date");

        ClientName.setText("Client Name");

        Total.setText("Total");

        TableOfInvoiceItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(TableOfInvoiceItems);

        newlinebutton.setText("New Line");
        newlinebutton.addActionListener(ActionsListener);

        removelinebutton.setText("Delete Line");
        removelinebutton.addActionListener(ActionsListener);

        jMenu1.setText("File");

        LoadFiles.setText("Load Files");
        LoadFiles.addActionListener(ActionsListener);
        jMenu1.add(LoadFiles);

        SaveFiles.setText("Save Files");
        SaveFiles.addActionListener(ActionsListener);
        SaveFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveFilesActionPerformed(evt);
            }
        });
        jMenu1.add(SaveFiles);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newinvoicebutton)
                        .addGap(66, 66, 66)
                        .addComponent(removeinvoicebutton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InvoiceNum)
                                    .addComponent(InvoiceDate)
                                    .addComponent(ClientName)
                                    .addComponent(Total))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InvoiceTotalLabel)
                                    .addComponent(ClientNameLabel)
                                    .addComponent(InvoiceDateLabel)
                                    .addComponent(InvoiceNumLabel)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(newlinebutton)
                                .addGap(111, 111, 111)
                                .addComponent(removelinebutton)))
                        .addGap(0, 37, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InvoiceNum)
                            .addComponent(InvoiceNumLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InvoiceDate)
                            .addComponent(InvoiceDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ClientName)
                            .addComponent(ClientNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Total)
                            .addComponent(InvoiceTotalLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeinvoicebutton)
                    .addComponent(newinvoicebutton)
                    .addComponent(newlinebutton)
                    .addComponent(removelinebutton))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveFilesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */ 
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InvoiceApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ClientName;
    private javax.swing.JLabel ClientNameLabel;
    private javax.swing.JLabel InvoiceDate;
    private javax.swing.JLabel InvoiceDateLabel;
    private javax.swing.JLabel InvoiceNum;
    private javax.swing.JLabel InvoiceNumLabel;
    private javax.swing.JLabel InvoiceTotalLabel;
    private javax.swing.JMenuItem LoadFiles;
    private javax.swing.JMenuItem SaveFiles;
    private javax.swing.JTable TableOfInvoiceItems;
    private javax.swing.JTable TableOfInvoices;
    private javax.swing.JLabel Total;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton newinvoicebutton;
    private javax.swing.JButton newlinebutton;
    private javax.swing.JButton removeinvoicebutton;
    private javax.swing.JButton removelinebutton;
    // End of variables declaration//GEN-END:variables
    private ProjectActions ActionsListener = new ProjectActions(this);
    private ArrayList<InvoiceHeader> InvARRAY;
    private ArrayList<InvoiceLine> LINESARRAY;
    private InvoiceHeaderTM HeaderTM;
    public static SimpleDateFormat DF = new SimpleDateFormat("dd-MM-yyyy");
    private InvoiceTableChooseListener InvoiceChoseListener = new InvoiceTableChooseListener(this);

    public ArrayList<InvoiceLine> getLINESARRAY() {
        return LINESARRAY;
    }

    public void setLINESARRAY(ArrayList<InvoiceLine> LINESARRAY) {
        this.LINESARRAY = LINESARRAY;
    }

    public ArrayList<InvoiceHeader> getInvARRAY() {
        return InvARRAY;
    }
   
    public void setInvARRAY(ArrayList<InvoiceHeader> InvARRAY) {
        this.InvARRAY = InvARRAY;
    }
    
    public InvoiceHeader getInvoiceObj (int a){
    
    for (InvoiceHeader InvHead : InvARRAY){
    if (InvHead.getNumber() == a){
            return InvHead;
         }
      }
        return null;
    }

    public InvoiceHeaderTM getHeaderTM() {
        return HeaderTM;
    }

    public void setHeaderTM(InvoiceHeaderTM HeaderTM) {
        this.HeaderTM = HeaderTM;
    }

    public JTable getTableOfInvoiceItems() {
        return TableOfInvoiceItems;
    }

    public JTable getTableOfInvoices() {
        return TableOfInvoices;
    }

    public JLabel getClientNameLabel() {
        return ClientNameLabel;
    }

    public void setClientNameLabel(JLabel ClientNameLabel) {
        this.ClientNameLabel = ClientNameLabel;
    }

    public JLabel getInvoiceDateLabel() {
        return InvoiceDateLabel;
    }

    public void setInvoiceDateLabel(JLabel InvoiceDateLabel) {
        this.InvoiceDateLabel = InvoiceDateLabel;
    }

    public JLabel getInvoiceNumLabel() {
        return InvoiceNumLabel;
    }

    public void setInvoiceNumLabel(JLabel InvoiceNumLabel) {
        this.InvoiceNumLabel = InvoiceNumLabel;
    }

    

    public JLabel getInvoiceTotalLabel() {
        return InvoiceTotalLabel;
    }

    public void setInvoiceTotalLabel(JLabel InvoiceTotalLabel) {
        this.InvoiceTotalLabel = InvoiceTotalLabel;
    }

    public ProjectActions getActionsListener() {
        return ActionsListener;
    }

 
     
    
}
